#!/usr/bin/env ruby
# encoding: utf-8

require File.expand_path("boot", File.dirname(__FILE__))

require "em-synchrony"
require "em-synchrony/fiber_iterator"

EM.threadpool_size = BrabusStress::THREADS_COUNT

scenarios = [BrabusStress::Scenarios::Geocode, BrabusStress::Scenarios::Auth, BrabusStress::Scenarios::LiveFeed, BrabusStress::Scenarios::Location]

scenarios = [BrabusStress::Scenarios::Auth, BrabusStress::Scenarios::LiveFeed, BrabusStress::Scenarios::Location]

scenarios_pack = []
BrabusStress::THREADS_COUNT.times {scenarios_pack << scenarios.sample}

@size = scenarios_pack.size

EventMachine.epoll
EventMachine.synchrony do
  EM::Synchrony::Iterator.new(scenarios_pack, scenarios_pack.size).each do |scenario, iter|
    scenario.send :run! do
      p "#{Time.now.utc}: Scenario #{scenario.to_s} completed."
      iter.next
    end
  end
  
  EM.stop
end